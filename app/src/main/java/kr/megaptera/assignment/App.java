/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.studio.http.server;

import com.google.gson.Gson;
import com.google.gson.JsonParser;

import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.Reader;
import java.io.Writer;
import java.net.ServerSocket;
import java.net.Socket;
import java.nio.CharBuffer;
import java.util.HashMap;
import java.util.Map;

public class App {
    public Socket socket;

    public static void main(String[] args) throws IOException {
        com.studio.http.server.App app = new com.studio.http.server.App();
        app.run();
    }

    private void run() throws IOException {
        Gson gson = new Gson();

        // 1. listen
        ServerSocket listener = new ServerSocket(8080, 0);
        System.out.println("listen");

        Map<Integer, String> tasks = new HashMap<>();
        int taskId = 1;
        String responseBody;

        while (true) {

            // 2. accept
            socket = listener.accept();
            System.out.println("accept");

            // 3. request
            Reader reader = new InputStreamReader(socket.getInputStream());
            CharBuffer charBuffer = CharBuffer.allocate(1_000_000);
            reader.read(charBuffer);
            String statusCode = "";
            String statusText = "";

            charBuffer.flip();
            String strBuffer = charBuffer.toString();

            // get info (
            String[] lines = strBuffer.split("\r\n");
            String requestLine = lines[0];
            String[] requestLineParts = requestLine.split(" ");
            String method = requestLineParts[0];
            String path = requestLineParts[1];


            // 4. response
            if (path.equals("/tasks")) {

                responseBody = gson.toJson(tasks);
                byte[] bytes = responseBody.getBytes();

                if (method.equals("GET")) {
                    statusCode = "200";
                    statusText = "OK";
                } else if (method.equals("POST")) {
                    String requestBody = strBuffer.split("\n\r")[1];

                    if (requestBody.equals("\n")) {
                        statusCode = "400";
                        statusText = "Bad Request";
                    } else {
                        String task = JsonParser.parseString(requestBody).getAsJsonObject().get("task").getAsString();
                        tasks.put(taskId++, task);

                        responseBody = gson.toJson(tasks);

                        bytes = responseBody.getBytes();
                        statusCode = "201";
                        statusText = "Created";
                    }
                }

                String message = "" +
                        "HTTP/1.1 " + statusCode + " " + statusText + "\n" +
                        "Content-Length: " + bytes.length + "\n" +
                        "Content-Type: text/html; charset=UTF-8\n" +
                        "Host: LocalHost:8080\n" +
                        "\n" + responseBody;

                Writer writer = new OutputStreamWriter(socket.getOutputStream());
                writer.write(message);
                writer.flush();
            }

            // 4. close
            socket.close();
        }
    }
}